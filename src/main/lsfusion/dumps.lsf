MODULE Dumps;

REQUIRE System, Utils, HockeyStats;

backupTeamsPath = '/backups/teams.xlsx';
backupPlayersPath = '/backups/players.xlsx';
backupGamesPath = '/backups/games.xlsx';
backupGoalsPath = '/backups/goals.xlsx';

fillDB() {
    LOCAL importFile = FILE ();

    READ backupTeamsPath() TO importFile;

    LOCAL teamName = STRING[30] (INTEGER);

    IMPORT XLS FROM importFile() TO teamName;

    FOR imported(INTEGER i) NEW t = Team DO {
        name(t) <- teamName(i);
    }
    APPLY;

    READ backupPlayersPath() TO importFile;

    LOCAL playerName = STRING[50] (INTEGER);
    LOCAL playerBirthDate = DATE (INTEGER);
    LOCAL playerRole = STRING[20] (INTEGER);
    LOCAL playerNumber = INTEGER (INTEGER);
    LOCAL playerTeamName = STRING[30] (INTEGER);

    IMPORT XLS FROM importFile() TO playerName, playerBirthDate, playerRole, playerNumber, playerTeamName;

    FOR imported(INTEGER i) NEW p = Player DO {
        name(p) <- playerName(i);
        number(p) <- playerNumber(i);
        role(p) <- playerRole(i);
        birthDate(p) <- playerBirthDate(i);
        team(p) <- GROUP MAX Team t IF name(t) = playerTeamName(i);
    }
    APPLY;

    READ backupGamesPath() TO importFile;

    LOCAL gameDate = DATE (INTEGER);
    LOCAL gameHostTeamName = STRING[30] (INTEGER);
    LOCAL gameGuestTeamName = STRING[30] (INTEGER);

    IMPORT XLS FROM importFile() TO gameDate, gameHostTeamName, gameGuestTeamName;

    FOR imported(INTEGER i) NEW g = Game DO {
        date(g) <- gameDate(i);
        hostTeam(g) <- GROUP MAX Team t IF name(t) = gameHostTeamName(i);
        guestTeam(g) <- GROUP MAX Team t IF name(t) = gameGuestTeamName(i);
//        userResult(g);
    }
    APPLY;

    READ backupGoalsPath() TO importFile;

    LOCAL goalGame = TEXT (INTEGER);
    LOCAL goalMinute = INTEGER (INTEGER);
    LOCAL goalTeamName = STRING[30] (INTEGER);
    LOCAL goalPlayerName = STRING[50] (INTEGER);

    IMPORT XLS FROM importFile() TO goalGame, goalMinute, goalTeamName, goalPlayerName;

    FOR imported(INTEGER i) NEW g = Goal DO {
        game(g) <- GROUP MAX Game gm IF gameName(gm) = goalGame(i);
        minute(g) <- goalMinute(i);
        team(g) <- GROUP MAX Team t IF name(t) = goalTeamName(i);
        player(g) <- GROUP MAX Player p IF name(p) = goalPlayerName(i);
    }
    APPLY;
}

lastTeamName 'Название последней команды' () = GROUP MAX name(Team t);

checkDBBeforeFilling 'Загрузить демо-объекты' () {
    IF lastTeamName() THEN
        MESSAGE 'The database is not empty';
    ELSE
        fillDB();
}


// NAVIGATOR
NAVIGATOR {
    NEW FOLDER teamsCat 'Заполнение' WINDOW toolbar IMAGE 'bi-database-fill-add' {
        NEW ACTION checkDBBeforeFilling IMAGE 'bi-database-fill-up';
    }
}
