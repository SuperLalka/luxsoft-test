MODULE HockeyStats;

REQUIRE System, Time;


// CLASSES
CLASS Team 'Команда';

name 'Название команды' = DATA STRING[30] (Team) IN base;


CLASS Player 'Игрок';

name 'Фамилия, Имя' = DATA STRING[50] (Player);
number 'Номер' = DATA INTEGER (Player);
role 'Амплуа' = DATA STRING[20] (Player) IN base;
birthDate 'Дата рождения' = DATA DATE (Player);
team = DATA Team (Player);

teamName 'Команда' (Team) = name(team(Team));

CONSTRAINT number(Player p) < 0 MESSAGE 'Значение номера не может быть отрицательным';

CONSTRAINT birthDate(Player p) > currentDate() MESSAGE 'Дата рождения должна быть в прошлом';


CLASS Game 'Игра';

date 'Дата' = DATA DATE (Game);
hostTeam = DATA Team (Game);
guestTeam = DATA Team (Game);
hostGoals 'Х голы' = DATA INTEGER (Game);
guestGoals 'Г голы' = DATA INTEGER (Game);

gameName 'Игра' (Game g) = date(g) + ' | ' + name(hostTeam(g)) + ' - ' + name(guestTeam(g));
hostTeamName 'Хозяева' (Game g) = name(hostTeam(g));
guestTeamName 'Гости' (Game g) = name(guestTeam(g));

CONSTRAINT hostTeam(Game g) = guestTeam(g) CHECKED BY hostTeam, guestTeam MESSAGE 'Хозяйская и гостевая команды должны быть разными';

CONSTRAINT hostGoals(Game g) = guestGoals(g) MESSAGE 'Игра не может закончиться вничью';


CLASS GameResult 'Р/И' {
    win 'П',
    winOT 'ПО',
    winSO 'ПБ'
}

userResult = DATA GameResult (Game);

resultName 'Имя' (GameResult game) = staticCaption(game) IF game IS GameResult IN base;
result (Game game) = OVERRIDE userResult(game),
    (GameResult.win IF ((hostGoals(game) (-) guestGoals(game)) > 1 OR (guestGoals(game) (-) hostGoals(game)) > 1));
resultName 'Р/И' (Game game) = resultName(result(game));

CONSTRAINT ((hostGoals(Game game) (-) guestGoals(game)) > 1 OR (hostGoals(game) (-) guestGoals(game)) < -1) AND userResult(game)
    MESSAGE 'Результат игры определен автоматически';

CONSTRAINT ((hostGoals(Game game) (-) guestGoals(game)) < 2 AND (hostGoals(game) (-) guestGoals(game)) > -2) AND NOT userResult(game)
    MESSAGE 'Укажите результат игры';


CLASS Goal 'Гол';

game = DATA Game (Goal);
minute 'Минута матча' = DATA INTEGER (Goal);
team = DATA Team (Goal);
player = DATA Player (Goal);

gameName 'Игра' (Goal g) = gameName(game(g));
playerName 'Игрок' (Player) = name(player(Player));
playerTeam (Player) = team(player(Player));
playerTeamName 'Команда' (Player) = teamName(player(Player));

CONSTRAINT minute(Goal g) < 0 MESSAGE 'Значение минуты не может быть отрицательным';

CONSTRAINT player(Goal g) AND NOT playerTeam(g) == hostTeam(game(g)) AND NOT playerTeam(g) == guestTeam(game(g))
    MESSAGE 'Игрок должен относится к команде которая участвует в матче';

CONSTRAINT team(Goal g) AND NOT team(g) == hostTeam(game(g)) AND NOT team(g) == guestTeam(game(g))
    MESSAGE 'Команда должна участвовать в матче';


// FORMS
FORM team 'Команда'
    OBJECTS t = Team PANEL
    PROPERTIES(t) name

    EDIT Team OBJECT t

    OBJECTS p = Player
    PROPERTIES(p) name, number, role, birthDate, NEW, DELETE
    FILTERS team(p) = t
    ORDERS role(p)
;

FORM teams 'Команды'
    OBJECTS t = Team
    PROPERTIES(t) READONLY name
    PROPERTIES(t) NEWSESSION NEW, EDIT, DELETE

    LIST Team OBJECT t
;

FORM player 'Игрок'
    OBJECTS p = Player PANEL
    PROPERTIES(p) name, number, role, birthDate, teamName

    EDIT Player OBJECT p
;

FORM players 'Игроки'
    OBJECTS p = Player
    PROPERTIES(p) READONLY name, number, role, birthDate, teamName
    PROPERTIES(p) NEWSESSION NEW, EDIT, DELETE
    ORDERS role(p)

    LIST Player OBJECT p
;

fillTeam (Goal g)  {
    INPUT p = Player DO {
        NEW d = Goal {
            team(g) <- team(p);
            player(g) <- p;
        }
    }
}

FORM goal 'Гол'
    OBJECTS g = Goal PANEL
    PROPERTIES(g) gameName, minute, player ON CHANGE fillTeam(g), team

    EDIT Goal OBJECT g
;

FORM goals 'Голы'
    OBJECTS g = Goal
    PROPERTIES(g) READONLY gameName, minute, playerName, playerTeamName
    PROPERTIES(g) NEWSESSION NEW, EDIT, DELETE

    LIST Goal OBJECT g
;

FORM game 'Игра'
    OBJECTS gm = Game PANEL
    PROPERTIES(gm) date, hostTeamName, guestTeamName, hostGoals, guestGoals

    EDIT Game OBJECT gm

    OBJECTS gl = Goal
    PROPERTIES(gl) READONLY gameName, minute, playerName, playerTeamName, NEW, DELETE
    FILTERS game(gl) = gm
;

FORM games 'Игры'
    OBJECTS g = Game
    PROPERTIES(g) READONLY date, hostTeamName, hostGoals, guestTeamName, guestGoals, resultName
    PROPERTIES(g) NEWSESSION NEW, EDIT, DELETE

    LIST Game OBJECT g
;

winner(Game game) = IF hostGoals(game) > guestGoals(game)
    THEN hostTeam(game)
    ELSE guestTeam(game);

looser(Game game) = IF hostGoals(game) > guestGoals(game)
    THEN guestTeam(game)
    ELSE hostTeam(game);

hostGamesPlayed = GROUP SUM 1 BY hostTeam(Game game);
guestGamesPlayed = GROUP SUM 1 BY guestTeam(Game game);
gamesPlayed 'И' (Team team) = hostGamesPlayed(team) (+) guestGamesPlayed(team);

gamesWonBy(Team team, GameResult type) = OVERRIDE [GROUP SUM 1 BY winner(Game game), result(game)](team, type),
    0 IF team IS Team AND type IS GameResult MATERIALIZED;

gamesWon 'В' (Team team) = gamesWonBy(team, GameResult.win);
gamesWonOT 'ВО' (Team team) = gamesWonBy(team, GameResult.winOT);
gamesWonSO 'ВБ' (Team team) = gamesWonBy(team, GameResult.winSO);

gamesLostBy(Team team, GameResult type) = OVERRIDE [GROUP SUM 1 BY looser(Game game), result(game)](team, type),
    0 IF team IS Team AND type IS GameResult MATERIALIZED;

gamesLost 'П' (Team team) = gamesLostBy(team, GameResult.win);
gamesLostOT 'ПО' (Team team) = gamesLostBy(team, GameResult.winOT);
gamesLostSO 'ПБ' (Team team) = gamesLostBy(team, GameResult.winSO);

points 'Очки' (Team team) = gamesWon(team) * 3 + (gamesWonSO(team) + gamesWonOT(team)) * 2 + gamesLostOT(team) + gamesLostSO(team);

hostGoalsScored = GROUP SUM hostGoals(Game game) BY hostTeam(game);
guestGoalsScored = GROUP SUM guestGoals(Game game) BY guestTeam(game);
goalsScored 'Кол-во забитых голов' (Team team) = OVERRIDE hostGoalsScored(team) (+) guestGoalsScored(team), 0 IF team IS Team;

hostGoalsConceded = GROUP SUM guestGoals(Game game) BY hostTeam(game);
guestGoalsConceded = GROUP SUM hostGoals(Game game) BY guestTeam(game);
goalsConceded 'Кол-во пропущенных голов' (Team team) = OVERRIDE hostGoalsConceded(team) (+) guestGoalsConceded(team), 0 IF team IS Team;

place 'Место' (Team team) = PARTITION SUM 1 ORDER DESC points(team), gamesWon(team), gamesWonOT(team), gamesWonSO(team),
    (OVERRIDE goalsScored(team) (-) goalsConceded(team), 0), goalsScored(team);

playerGoalsQuantity 'Количество голов' (Goal) = GROUP SUM 1 BY player(Goal g);

FORM scoreTable 'Турнирная таблица'
    OBJECTS t = Team
    PROPERTIES(t) READONLY place, name, gamesPlayed, gamesWon, gamesWonOT, gamesWonSO,
        gamesLostSO, gamesLostOT, gamesLost, goalsScored, goalsConceded, points
    ORDERS place(t)

    OBJECTS p = Player
    PROPERTIES(p) READONLY name, teamName, playerGoalsQuantity
    FILTERS playerGoalsQuantity(p) > 0
    ORDERS playerGoalsQuantity(p) DESC
;


// DESIGNS


// NAVIGATOR
NAVIGATOR {
    NEW FOLDER teamsCat 'Команды' WINDOW toolbar IMAGE 'teams' {
        NEW teams;
    }
    teamsCat {
        NEW players AFTER teams;
    }
    NEW FOLDER scoreTableCat 'Турнирная таблица' WINDOW toolbar IMAGE 'scoreTable' {
        NEW scoreTable;
    }
    scoreTableCat {
        NEW games AFTER scoreTable;
        NEW goals;
    }
}
